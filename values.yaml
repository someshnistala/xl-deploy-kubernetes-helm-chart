# Default values for xl-deploy.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

## Platform on which to install the chart (PlainK8s/AWSEKS/AzureAKS)
K8sSetup:
  Platform: AWSEKS

# No. of XL-Deploy master and worker pods to run.
XldMasterCount: 3
XldWorkerCount: 3

## XL-Deploy image version
## Ref: https://hub.docker.com/r/xebialabs/xl-deploy/tags
ImageRepository: "xebialabs/xl-deploy"
ImageTag: "9.8.0"

## Specify a imagePullPolicy
## Defaults to 'Always' if image tag is 'latest',set to 'IfNotPresent'
ImagePullPolicy: "Always"

## Secrets must be manually created in the namespace.
# ImagePullSecret: xlDeploy

## Install haproxy subchart. If you have haproxy already installed, set 'install' to 'false'.
## If you have any other ingress controller installed, you can set the 'install' to 'false'.
haproxy-ingress:
  install: true
  controller:
    kind: DaemonSet
    service:
      type: LoadBalancer

## Ingress Configuration
## Ref: https://kubernetes.io/docs/concepts/services-networking/ingress/
ingress:
  Enabled: true
  annotations:
    # ingress.kubernetes.io/tls-acme: "true"
    ingress.kubernetes.io/ssl-redirect: "false"
    kubernetes.io/ingress.class: haproxy
    ingress.kubernetes.io/rewrite-target: /
    ingress.kubernetes.io/affinity: cookie
    ingress.kubernetes.io/session-cookie-name: SESSION_XLD
    ingress.kubernetes.io/session-cookie-strategy: prefix
    ingress.kubernetes.io/config-backend: |
      option httpchk GET /deployit/ha/health HTTP/1.0
  path: /xl-deploy/
  hosts:
    - 

#  tls:
#    - secretName: example-secretsName
#      hosts:
#        - example.com

## Ref: https://docs.xebialabs.com/v.9.8/deploy/docker/docker-environment-variables/#get-started
AdminPassword: Admin123$
  # Provide the admin password to be used

xldLicense: LS0tIExpY2Vuc2UgLS0tCkxpY2Vuc2UgdmVyc2lvbjogMwpQcm9kdWN0OiBYTCBEZXBsb3kKTGljZW5zZWQgdG86IFhlYmlhTGFicwpDb250YWN0OiBYZWJpYUxhYnMgSW50ZXJuYWwgVXNlIE9ubHkgPGluZm9AeGViaWFsYWJzLmNvbT4KRXhwaXJlcyBhZnRlcjogMjAzNy0wMS0wMQpMaWNlbnNlZCBudW1iZXIgb2YgQ0lzOiB4bC5TYXRlbGxpdGU9MTAwMApMaWNlbnNlZCBwbHVnaW46IGpib3NzYXMtcGx1Z2luCkxpY2Vuc2VkIHBsdWdpbjogd21xLXBsdWdpbgpMaWNlbnNlZCBwbHVnaW46IG9zYi1wbHVnaW4KTGljZW5zZWQgcGx1Z2luOiB0b21jYXQtcGx1Z2luCkxpY2Vuc2VkIHBsdWdpbjogd3BzLXBsdWdpbgpMaWNlbnNlZCBwbHVnaW46IHdpbmRvd3MtcGx1Z2luCkxpY2Vuc2VkIHBsdWdpbjogaWlzLXBsdWdpbgpMaWNlbnNlZCBwbHVnaW46IGJpenRhbGstcGx1Z2luCkxpY2Vuc2VkIHBsdWdpbjogd2xzLXBsdWdpbgpMaWNlbnNlZCBwbHVnaW46IHdhcy1wbHVnaW4KTGljZW5zZWQgcGx1Z2luOiBnbGFzc2Zpc2gtcGx1Z2luCkxpY2Vuc2VkIHBsdWdpbjogamJvc3NkbS1wbHVnaW4KU3VwcG9ydCBwb2xpY3k6IDh4NQpFZGl0aW9uOiBFbnRlcnByaXNlCi0tLSBTaWduYXR1cmUgKFNIQTF3aXRoRFNBKSAtLS0KMzAyYzAyMTQzNTg3ZThhNDA0ZDQyMzJiZDQ3ZTY5NjU5Mjc4MTczNjIxYWRiMTM1MDIxNDY2Y2U1YTFkZmQ5NjFiZmE0NDg4ZjRlMmYwMzYKYmEzMzg5MGU2N2ViCi0tLSBFbmQgb2YgU2lnbmF0dXJlIC0tLQ==
# Convert xl-deploy.lic files content to base64 ( cat xl-deploy.lic | base64 -w 0 ) and put the output here

RepositoryKeystore: zs7OzgAAAAIAAAABAAAAAwAWZGVwbG95aXQtcGFzc3N3b3JkLWtleQAAAXQpCF0irO0ABXNyADNjb20uc3VuLmNyeXB0by5wcm92aWRlci5TZWFsZWRPYmplY3RGb3JLZXlQcm90ZWN0b3LNV8pZ5zC7UwIAAHhyABlqYXZheC5jcnlwdG8uU2VhbGVkT2JqZWN0PjY9psO3VHACAARbAA1lbmNvZGVkUGFyYW1zdAACW0JbABBlbmNyeXB0ZWRDb250ZW50cQB+AAJMAAlwYXJhbXNBbGd0ABJMamF2YS9sYW5nL1N0cmluZztMAAdzZWFsQWxncQB+AAN4cHVyAAJbQqzzF/gGCFTgAgAAeHAAAAARMA8ECLs4auhyGIzFAgMDDUB1cQB+AAUAAACQYKUO8KAHHiCEzCxYNyFjGEDEcX9MN7prIsHTOBlI4D6hS4Wr8ZeOxhnxsF7GnuSV47w+hF9uPAMUtWpo3J+2JvaX7YZALC0Vbdw3gFG7R6NtAl/qaDGh8gCWs5wqaSKL16XYb5pdHk8Qnp0MUb5otN2TajFBUMujSP7HTmK8b2pxelsyQv9G0QsNpHA9eSAidAAWUEJFV2l0aE1ENUFuZFRyaXBsZURFU3QAFlBCRVdpdGhNRDVBbmRUcmlwbGVERVM+1hWAjcQK0n7GpO5pyX8b1V+/4g==
# https://docs.xebialabs.com/v.9.8/deploy/how-to/update-the-xl-deploy-digital-certificate/#get-started
# Convert keystore.jks files content to base64 ( cat keystore.jks | base64 -w 0 ) and put the output here

KeystorePassphrase: test123
# Passphrase for keystore.jks file

resources: {}
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #  cpu: 3
  #  memory: 3Gi
  # requests:
  #  cpu: 0.7
  #  memory: 1700Mi

## Ref: https://github.com/bitnami/charts/blob/master/bitnami/postgresql/README.md
## Install postgresql chart. If you have an existing database deployment, set 'install' to 'false'.
postgresql:
  install: true
  postgresqlUsername: postgres
  postgresqlPassword: "postgres"
  postgresqlExtendedConf:
    listenAddresses: "'*'"
    maxConnections: "500"
  initdbScriptsSecret: postgresql-init-sql-xld
  service:
    port: 5432
  persistence:
    enabled: true
    storageClass: "gp2"
    size: 50Gi
    existingClaim:
  resources: {}
  #  requests:
  #    memory: "1Gi"
  #    cpu: "250m"
  #  limits:
  #    memory: "2Gi"
  #    cpu: "1"
  nodeSelector: {}
  affinity: {}
  tolerations: []

## Ref: https://docs.xebialabs.com/v.9.7/deploy/how-to/configure-the-xl-deploy-sql-repository/#location-of-the-repository
## Ref: https://docs.xebialabs.com/v.9.7/deploy/docker/docker-environment-variables/
UseExistingDB:
  Enabled: false
  # If you want to use an existing database, set 'postgresql.install' to 'false' and 'UseExistingDB.Enabled' to 'true'.
  # Uncomment the following lines and provide the values.
  # XL_DB_URL:
  # XL_DB_USERNAME:
  # XL_DB_PASSWORD:

## Install rabbitmq chart. If you have an existing message queue deployment, set 'install' to 'false'.
## ref: https://github.com/bitnami/charts/blob/master/bitnami/rabbitmq/README.md
rabbitmq:
  install: true
  replicaCount: 3
  image:
    registry: docker.io
    repository: bitnami/rabbitmq
    tag: 3.8.11-debian-10-r0
    # pullSecrets:
    #   - myRegistryKeySecretName
  auth:
    username: guest
    password: guest
    erlangCookie: DEPLOYRABBITMQCLUSTER
  extraPlugins: 'rabbitmq_jms_topic_exchange'
  extraSecrets:
    xld-load-definition:
      xld-load_definition.json: |
        {
        "users": [
          {
              "name": "{{ .Values.auth.username }}",
              "password": "{{ .Values.auth.password }}",
              "tags": "administrator"
          }
          ],
        "vhosts": [
          {
            "name": "/"
          }
          ],
          "permissions": [
          {
            "user": "{{ .Values.auth.username }}",
            "vhost": "/",
            "configure": ".*",
            "write": ".*",
            "read": ".*"
          }
          ],
        "global_parameters": [
          {
            "name": "cluster_name",
            "value": ""
          }
          ],
         "policies": [
            {
              "name": "ha-all",
              "apply-to": "all",
              "pattern": ".*",
              "vhost": "/",
              "definition": {
                "ha-mode": "all",
                "ha-sync-mode": "automatic",
                "ha-sync-batch-size": 1
              }
            }
          ]
        }
  loadDefinition:
    enabled: true
    existingSecret: xld-load-definition
  extraConfiguration: |
    load_definitions = /app/xld-load_definition.json 
  persistence:
    enabled: true
    storageClass: "gp2"
    size: 8Gi
  service:
    type: ClusterIP  
  volumePermissions:
    enabled: true  

# Ref: https://docs.xebialabs.com/v.9.7/deploy/how-to/configure-task-queueing/#how-it-works
UseExistingMQ:
  Enabled: false
  # If you want to use a existing Message Queue, change the "rabbitmq.install to false"
  # Set 'UseExistingMQ.Enabled' to 'true'.Uncomment the following lines and provide the values.
  # XLD_TASK_QUEUE_USERNAME:
  # XLD_TASK_QUEUE_PASSWORD:
  # XLD_TASK_QUEUE_URL:
  # XLD_TASK_QUEUE_DRIVER_CLASS_NAME:

## Configure extra options for liveness and readiness probes
HealthProbes: true
HealthProbesLivenessTimeout: 60
HealthProbesReadinessTimeout: 60
HealthProbeFailureThreshold: 12
HealthPeriodScans: 10

nodeSelector: {}

tolerations: []

## Affinity and anti-affinity
## Ref: https://kubernetes.io/docs/concepts/configuration/assign-pod-node/#affinity-and-anti-affinity
affinity: {}

## XL Deploy data Persistent Volume for 'XL Deploy export'
## If "Persistence.Enabled" set to "false", it will use hostPath.
Persistence:
  Enabled: true
  ## Choose storage class provided by your cloud provider, example "ssd" on GKE, AWS and OpenStack
  StorageClass: "gp2"
  Annotations: {}
  AccessMode: ReadWriteOnce
  XldExportPvcSize: 10Gi
  XldWorkPvcSize: 5Gi

# Set "satellite.Enabled" value to "true" to use the "XL Satellite" feature
satellite:
  Enabled: false

